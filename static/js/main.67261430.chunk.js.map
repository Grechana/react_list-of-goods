{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","sortReverse","reset","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","console","log","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAuB,CACrBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZJ,SAAUJ,EAASS,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZJ,SAAUJ,EAASW,UAdzB,EAkBEC,YAAc,WACZ,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBApBzB,EAwBEO,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KA3BlB,4CA+BE,WACE,IAAMQ,EA7DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAeC,GAChC,OAAQd,GACN,KAAKJ,EAASS,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKlB,EAASW,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITd,GACFQ,EAAaO,UAIfC,QAAQC,IAAInB,EAAUE,GAEfQ,EAmCgBU,CAAkBvB,EAAiBwB,KAAKtB,OAE7D,EAGIsB,KAAKtB,MAFPC,EADF,EACEA,SACAE,EAFF,EAEEA,WAGF,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,uCACPtB,IAAaJ,EAASS,SAAW,GAAK,YACxCmB,QAASH,KAAKlB,mBAJhB,iCASA,wBACEoB,KAAK,SACLD,UAAS,2CACPtB,IAAaJ,EAASW,OAAS,GAAK,YACtCiB,QAASH,KAAKf,aAJhB,4BAUA,wBACEiB,KAAK,SACLD,UAAS,0CACPpB,EAAa,GAAK,YACpBsB,QAASH,KAAKb,YAJhB,qBASCR,IAAaJ,EAASK,OAAuB,IAAfC,EAE3B,wBACEqB,KAAK,SACL,UAAQ,SACRD,UAAU,6BACVE,QAASH,KAAKZ,MAJhB,mBASA,MAGN,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAvFnB,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67261430.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1: string, good2: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component <{}, ReorderOptions> {\n  state:ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  sortReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info \n            ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success  \n            ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.sortByLength}\n\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning \n            ${isReversed ? '' : 'is-light'}`}\n            onClick={this.sortReverse}\n          >\n            Reverse\n          </button>\n\n          {sortType !== SortType.NONE || isReversed !== false\n            ? (\n              <button\n                type=\"button\"\n                data-cy=\"button\"\n                className=\"button is-danger is-light \"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n            : ''}\n        </div>\n\n        <ul>\n          {visibleGoods.map((good: string) => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}